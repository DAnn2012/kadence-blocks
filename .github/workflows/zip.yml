name: Generate Zip
on:
    pull_request:
    workflow_dispatch:
        inputs:
            ref:
                description: 'Git Commit Ref (branch, tag, or hash)'
                default: 'main'
                required: true
                type: string
            production:
                description: 'Is this a production build?'
                default: 'no'
                type: choice
                options:
                    - 'yes'
                    - 'no'
            slack_channel:
                description: 'Slack channel ID to post to'
                required: false
            slack_thread:
                description: 'Slack thread to post to'
                required: false

jobs:
    set_git_ref:
        runs-on: ubuntu-latest
        outputs:
            ref: ${{ steps.set_var.outputs.ref }}
        steps:
            - name: Prepare job variables
              if: github.event_name == 'pull_request'
              run: |
                  echo "JOB_REF=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV

            - name: If a workflow_dispatch, set ref based on input
              if: github.event_name == 'workflow_dispatch'
              run: |
                  echo "JOB_REF=${{ github.event.inputs.ref }}" >> $GITHUB_ENV

            - name: Set ref github workflow output
              id: set_var
              run: |
                  echo "ref=${{ env.JOB_REF }}" >> $GITHUB_OUTPUT

    zip:
        uses: stellarwp/github-actions/.github/workflows/zip.yml@main
        needs:
            - set_git_ref
        with:
            ref: ${{ needs.set_git_ref.outputs.ref }}
            production: ${{ github.event.inputs.production }}
            slack_channel: ${{ github.event.inputs.slack_channel }}
            slack_thread: ${{ github.event.inputs.slack_thread }}
        secrets:
            COMPOSER_TOKEN: ${{ secrets.COMPOSER_TOKEN }}
            GH_BOT_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
            JENKINS_SECRET: ${{ secrets.ZIP_JENKINS_SECRET }}
            S3_BUCKET: ${{ secrets.ZIP_S3_BUCKET }}
            S3_ACCESS_KEY_ID: ${{ secrets.ZIP_S3_ACCESS_KEY_ID }}
            S3_SECRET_ACCESS_KEY: ${{ secrets.ZIP_S3_SECRET_ACCESS_KEY }}
            S3_REGION: ${{ secrets.ZIP_S3_REGION }}
            S3_ENDPOINT: ${{ secrets.ZIP_S3_ENDPOINT }}
