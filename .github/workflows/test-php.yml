name: Test PHP

on: [push, workflow_dispatch]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test: ["wpunit"]
        wordpress: ["6.0"]
        # wordpress: ["nightly", "5.9"]

    steps:

      - uses: actions/checkout@v2

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://npm.pkg.github.com'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - run: npm ci --ignore-scripts --legacy-peer-deps

      - run: npm rebuild && npm run prepare --if-present

      #- name: Build NPM packages
      #  run: npm run build

      - name: Install composer
        run: sudo composer self-update --stable

      #- name: Validate composer.json and composer.lock
      #  run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: |
            vendor
            vendor-prod
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}

      - name: Install composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        env:
          COMPOSER_HOME: $GITHUB_WORKSPACE/.composer
        run: |
          composer install --no-progress --no-suggest --ignore-platform-reqs
          sudo ./bin/composer-prod.sh

      - name: Generate autoloader
        if: steps.composer-cache.outputs.cache-hit == 'true'
        run: composer du

      - name: Setup environment
        run: envsubst < tests/docker-compose.codeception.env > tests/codeception.env

      - name: Set WordPress Version
        if: matrix.wordpress != 'nightly'
        run: sed -i -e 's/WP_TAG=5/WP_TAG=${{ matrix.wordpress }}/g' .env

      - name: Set WordPress Nightly
        if: matrix.wordpress == 'nightly'
        run: sed -i -e 's/WP_VERSION=""/WP_VERSION="nightly"/g' tests/codeception.env

      - name: Setup docker
        run: ./bin/setup-docker.sh

      - name: Run tests
        run: |
          npm run-script test-build
          npm run-script test-${{ matrix.test }}

      - name: Upload codeception output
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2.2.1
        with:
          name: "${{ matrix.test }}-${{ matrix.wordpress }}-output"
          path: "./tests/_output"
