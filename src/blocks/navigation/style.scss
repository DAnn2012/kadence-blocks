/**
 * Frontend only CSS.
 * Styles for both the navigation and nav link block
 */

@import "../../assets/css/variables.scss";

@mixin parent-toggles-menus-styles {
	.kb-link-wrap .kb-nav-dropdown-toggle-btn {
		position: absolute;
		left: 0;
		z-index: 10;
		top: 0;
		bottom: 0;
		justify-content: flex-end;
		width: 100%;
	}
}

@mixin uncollapse-sub-menus {
	.menu .sub-menu {
		@include show-sub-menu();
	}
	.kb-link-wrap .kb-nav-dropdown-toggle-btn {
		display: none;
	}
}

@mixin hide-sub-menu {
	opacity: 0;
	visibility: hidden;
	transform: translate(0, 0);
	clip: rect(1px, 1px, 1px, 1px);
	height: 1px;
	overflow: hidden;
}

@mixin show-sub-menu {
	opacity: 1;
	visibility: visible;
	transform: translate(0, 0);
	clip: auto;
	height: auto;
	overflow: visible;
}

@mixin navigation-fade-up-styles {
	transform: translate(0, 10px);
}
@mixin navigation-fade-down-styles {
	transform: translate(0, -10px);
}

@mixin horizontal-navigation-base-styles {
	//In the editor we just look for these classes as they will come and go as the preview device changes.
	//In the frontend, they will all be present, so must each be wrapped in a media query
	//Desktop fade up style
	.navigation-desktop-dropdown-animation-fade-up {
		.sub-menu {
			@media (min-width: $laptop-plus-query) {
				@include navigation-fade-up-styles();
			}
		}
	}
	//Tablet fade up style
	.navigation-tablet-dropdown-animation-fade-up {
		.sub-menu {
			@media (min-width: $before-tablet-plus-query) and (max-width: $tablet-minus-query) {
				@include navigation-fade-up-styles();
			}
		}
	}
	//Mobile fade up style
	.navigation-mobile-dropdown-animation-fade-up {
		.sub-menu {
			@media (max-width: $phone-minus-query) {
				@include navigation-fade-up-styles();
			}
		}
	}
	//Desktop fade down style
	.navigation-desktop-dropdown-animation-fade-down {
		.sub-menu {
			@media (min-width: $laptop-plus-query) {
				@include navigation-fade-down-styles();
			}
		}
	}
	//Tablet fade down style
	.navigation-tablet-dropdown-animation-fade-down {
		.sub-menu {
			@media (min-width: $before-tablet-plus-query) and (max-width: $tablet-minus-query) {
				@include navigation-fade-down-styles();
			}
		}
	}
	//Mobile fade down style
	.navigation-mobile-dropdown-animation-fade-down {
		.sub-menu {
			@media (max-width: $phone-minus-query) {
				@include navigation-fade-down-styles();
			}
		}
	}

	//horizontal submenus
	.sub-menu {
		position: absolute;
		top: 100%;
		flex-direction: column;
		background: #fff;
		margin-left: 0;
		z-index: 1000;
		width: initial;

		//sub menus that aren't mega get a default box shadow
		&:not(.mega-menu) {
			box-shadow: 0 2px 13px rgba(0, 0, 0, 0.1);
		}

		&.sub-menu-edge {
			left: auto;
			right: 0;
		}

		//third level nav
		.sub-menu {
			top: 0;
			left: 100%;
			right: auto;
			min-height: 100%;

			&.sub-menu-edge {
				left: auto;
				right: 100%;
			}
		}

		//sub menu menu items
		& > li {
			& > .kb-link-wrap > a {
				--kb-nav-top-padding: 1em;
				--kb-nav-right-padding: 1em;
				--kb-nav-bottom-padding: 1em;
				--kb-nav-left-padding: 1em;
				width: 200px;
			}
			& > .kb-link-wrap .kb-nav-arrow-svg {
				transform: rotate(270deg);
			}

			// Hide divider for last item.
			&:last-child {
				border-bottom: 0;
			}
		}

		//horizontal sub menu toggles
		.kb-nav-dropdown-toggle-btn {
			width: 2.6em;
			margin: 0;
			right: 0;

			&:focus {
				z-index: 10;
			}
		}
	}

	// Handle Reveal Animation for horizontal navs, hover only
	.menu-item:hover > .sub-menu {
		@include show-sub-menu();
	}

	.kb-nav-item-title-wrap {
		position: relative;
		display: flex;
		flex-wrap: nowrap;
		text-align: left;
	}

	/**
	 * "focus-within" is an alternative to focus class for
	 * supporting browsers (all but IE/Edge) for no-JS context
	 * (e.g. AMP) See https://caniuse.com/#feat=css-focus-within
	 *
	 * This selector needs to stay separated, otherwise submenus
	 * will not be displayed with IE/Edge.
	 */
	.menu-item:not(.menu-item--has-toggle):focus-within > ul {
		display: block;
	}
	// This makes the dropdowns work a little better on a touch device.
	@media (hover: none) {
		.menu-item--has-toggle:not(.menu-item--toggled-on) {
			.kb-nav-dropdown-toggle-btn {
				left: 0;
				right: 0;
				margin-right: 0;
				width: 100%;
				pointer-events: all;
			}
			& > .kb-link-wrap > a {
				pointer-events: none;
			}
		}
	}
}

@mixin vertical-navigation-base-styles {
	//In the editor we just look for these classes as they will come and go as the preview device changes.
	//In the frontend, they will all be present, so must each be wrapped in a media query
	//Desktop parent toggle sub menus
	.navigation-desktop-parent-toggles-menus-true {
		@media (min-width: $laptop-plus-query) {
			@include parent-toggles-menus-styles();
		}
	}
	//Tablet parent toggle sub menus
	.navigation-tablet-parent-toggles-menus-true {
		@media (min-width: $before-tablet-plus-query) and (max-width: $tablet-minus-query) {
			@include parent-toggles-menus-styles();
		}
	}
	//Mobiel parent toggle sub menus
	.navigation-mobile-parent-toggles-menus-true {
		@media (max-width: $phone-minus-query) {
			@include parent-toggles-menus-styles();
		}
	}

	//navs that indicate all sub menus should not be collapsed should be shown
	//In the editor we just look for these classes as they will come and go as the preview device changes.
	//In the frontend, they will all be present, so must each be wrapped in a media query
	//Desktop collapse sub menus
	.navigation-desktop-collapse-sub-menus-false {
		@media (min-width: $laptop-plus-query) {
			@include uncollapse-sub-menus();
		}
	}
	//Tablet collapse sub menus
	.navigation-tablet-collapse-sub-menus-false {
		@media (min-width: $before-tablet-plus-query) and (max-width: $tablet-minus-query) {
			@include uncollapse-sub-menus();
		}
	}
	//Mobile collapse sub menus
	.navigation-mobile-collapse-sub-menus-false {
		@media (max-width: $phone-minus-query) {
			@include uncollapse-sub-menus();
		}
	}

	.navigation {
		width: 100%;
		display: block;
	}

	.menu-container {
		display: block;
		.menu {
			display: block;
			.menu-item {
				display: list-item;
				//margin: initial;
			}
		}
	}

	//all menus
	ul {
		display: block;
		list-style: none;
		margin: 0;
		padding: 0;
	}

	//sub menus
	.sub-menu {
		padding-left: 1em;
		transition: all 0.2s ease-in-out;

		.menu-item > .kb-link-wrap > a {
			width: 100%;
		}
	}

	//if we get this deep stop indenting
	ul .sub-menu .sub-menu .sub-menu .sub-menu ul {
		padding-left: 0;
	}

	.kb-nav-link-content {
		display: block;
		width: 100%;
		text-decoration: none;
		padding: 0.6em 0.5em;
		color: inherit;
	}

	.kb-link-wrap {
		display: flex;
		position: relative;
	}

	// Dropdown Toggle Styles for vertical
	.kb-nav-dropdown-toggle-btn {
		background: transparent;
		color: inherit;
		padding: 0.5em 0.7em;
		margin: 0;
		display: flex;
		border: 0;
		border-radius: 0;
		box-shadow: none;
		line-height: normal;
		align-items: center;
		bottom: auto;
		pointer-events: all;
		width: auto;
		cursor: pointer;
		right: 0px;

		svg {
			height: auto;
			display: block;
		}
	}
	.kb-nav-dropdown-toggle-btn[aria-expanded="true"] svg {
		transform: rotate(180deg);
	}

	//top level nav links only
	.navigation > .menu-container > .menu > .menu-item:not(:last-of-type) > .kb-link-wrap {
		border-right: none;
	}
}

@mixin layout-stretch-styles {
	flex-grow: 1;

	.navigation {
		flex-grow: 1;
	}

	//only apply stretching to top level menu items
	.menu-container {
		flex-grow: 1;
		& > .menu {
			flex-grow: 1;
			justify-content: space-between;

			& > .menu-item {
				margin: 0;
				flex: 1 1 auto;
				& > .kb-link-wrap > .kb-nav-link-content {
					width: fit-content;
					margin-left: auto;
					margin-right: auto;
				}
			}
		}
	}
}

@mixin layout-fill-stretch-styles {
	//only apply stretching to top level menu items
	.menu-container {
		& > .menu {
			display: grid;
			grid-template-columns: repeat(auto-fit, minmax(60px, 1fr));

			& > .menu-item {
				text-align: center;
				& > .kb-link-wrap > .kb-nav-link-content {
					width: initial;
				}
			}
		}
	}
}

@mixin navigation-underline-styles {
	//only apply underline to top level menu items
	.menu-container {
		> .menu > .menu-item {
			> .kb-link-wrap > .kb-nav-link-content {
				position: relative;
				&:after {
					content: "";
					width: 100%;
					position: absolute;
					bottom: 0px;
					height: 2px;
					right: 50%;
					background: currentColor;
					transform: scale(0, 0) translate(-50%, 0);
					transition: transform 0.2s ease-in-out, color 0s ease-in-out;
				}
				&:hover:after {
					transform: scale(1, 1) translate(50%, 0);
				}
			}
			&.current-menu-item,
			&.current-page-item {
				> .kb-link-wrap > a:after {
					transform: scale(1, 1) translate(50%, 0);
				}
			}
		}
	}
}

@mixin navigation-full-height-styles {
	height: 100%;
	align-items: center;

	//only apply full height to top level menu items
	.menu-container {
		height: 100%;
		align-items: center;

		> .menu {
			height: 100%;
			align-items: center;

			> .menu-item {
				height: 100%;
				align-items: center;

				> .kb-link-wrap {
					height: 100%;

					> .kb-nav-link-content {
						display: flex;
						height: 100%;
						align-items: center;
					}
				}
			}
		}
	}
}

.wp-block-kadence-navigation {
	max-width: 100%;

	//In the editor we just look for these classes as they will come and go as the preview device changes.
	//In the frontend, they will all be present, so must each be wrapped in a media query
	//Desktop full-height-menu
	&.navigation-desktop-orientation-horizontal .navigation-desktop-style-underline-fullheight,
	&.navigation-desktop-orientation-horizontal .navigation-desktop-style-fullheight {
		@media (min-width: $laptop-plus-query) {
			@include navigation-full-height-styles();
		}
	}
	//Tablet full-height-menu
	&.navigation-tablet-orientation-horizontal .navigation-tablet-style-underline-fullheight,
	&.navigation-tablet-orientation-horizontal .navigation-tablet-style-fullheight {
		@media (min-width: $before-tablet-plus-query) and (max-width: $tablet-minus-query) {
			@include navigation-full-height-styles();
		}
	}
	//Mobile full-height-menu
	&.navigation-mobile-orientation-horizontal .navigation-mobile-style-underline-fullheight,
	&.navigation-mobile-orientation-horizontal .navigation-mobile-style-fullheight {
		@media (max-width: $phone-minus-query) {
			@include navigation-full-height-styles();
		}
	}

	//In the editor we just look for these classes as they will come and go as the preview device changes.
	//In the frontend, they will all be present, so must each be wrapped in a media query
	//Desktop underline menu
	&.navigation-desktop-orientation-horizontal .navigation[class*="navigation-desktop-style-underline"] {
		@media (min-width: $laptop-plus-query) {
			@include navigation-underline-styles();
		}
	}
	//Tablet underline menu
	&.navigation-tablet-orientation-horizontal .navigation[class*="navigation-tablet-style-underline"] {
		@media (min-width: $before-tablet-plus-query) and (max-width: $tablet-minus-query) {
			@include navigation-underline-styles();
		}
	}
	//Mobile underline menu
	&.navigation-mobile-orientation-horizontal .navigation[class*="navigation-mobile-style-underline"] {
		@media (max-width: $phone-minus-query) {
			@include navigation-underline-styles();
		}
	}

	//In the editor we just look for these classes as they will come and go as the preview device changes.
	//In the frontend, they will all be present, so must each be wrapped in a media query
	//Desktop horizontal menu
	&.navigation-desktop-orientation-horizontal {
		@media (min-width: $laptop-plus-query) {
			@include horizontal-navigation-base-styles;
		}
	}
	//Tablet horizontal menu
	&.navigation-tablet-orientation-horizontal {
		@media (min-width: $before-tablet-plus-query) and (max-width: $tablet-minus-query) {
			@include horizontal-navigation-base-styles;
		}
	}
	//Mobile horizontal menu
	&.navigation-mobile-orientation-horizontal {
		@media (max-width: $phone-minus-query) {
			@include horizontal-navigation-base-styles;
		}
	}

	//In the editor we just look for these classes as they will come and go as the preview device changes.
	//In the frontend, they will all be present, so must each be wrapped in a media query
	//Desktop vertical menu
	&.navigation-desktop-orientation-vertical {
		@media (min-width: $laptop-plus-query) {
			@include vertical-navigation-base-styles;
		}
	}
	//Tablet vertical menu
	&.navigation-tablet-orientation-vertical {
		@media (min-width: $before-tablet-plus-query) and (max-width: $tablet-minus-query) {
			@include vertical-navigation-base-styles;
		}
	}
	//Mobile vertical menu
	&.navigation-mobile-orientation-vertical {
		@media (max-width: $phone-minus-query) {
			@include vertical-navigation-base-styles;
		}
	}

	//In the editor we just look for these classes as they will come and go as the preview device changes.
	//In the frontend, they will all be present, so must each be wrapped in a media query
	//Desktop stretch
	&.navigation-desktop-layout-stretch-true.navigation-desktop-orientation-horizontal {
		@media (min-width: $laptop-plus-query) {
			@include layout-stretch-styles();
		}
	}
	//Tablet stretch
	&.navigation-tablet-layout-stretch-true.navigation-tablet-orientation-horizontal {
		@media (min-width: $before-tablet-plus-query) and (max-width: $tablet-minus-query) {
			@include layout-stretch-styles();
		}
	}
	//Mobile stretch
	&.navigation-mobile-layout-stretch-true.navigation-modbile-orientation-horizontal {
		@media (max-width: $phone-minus-query) {
			@include layout-stretch-styles();
		}
	}

	//In the editor we just look for these classes as they will come and go as the preview device changes.
	//In the frontend, they will all be present, so must each be wrapped in a media query
	//Desktop fill-stretch
	&.navigation-desktop-layout-stretch-true.navigation-desktop-layout-fill-stretch-true.navigation-desktop-orientation-horizontal {
		@media (min-width: $laptop-plus-query) {
			@include layout-fill-stretch-styles();
		}
	}
	//Tablet fill-stretch
	&.navigation-tablet-layout-stretch-true.navigation-tablet-layout-fill-stretch-true.navigation-tablet-orientation-horizontal {
		@media (min-width: $before-tablet-plus-query) and (max-width: $tablet-minus-query) {
			@include layout-fill-stretch-styles();
		}
	}
	//Mobile fill-stretch
	&.navigation-mobile-layout-stretch-true.navigation-mobile-layout-fill-stretch-true.navigation-mobile-orientation-horizontal {
		@media (max-width: $phone-minus-query) {
			@include layout-fill-stretch-styles();
		}
	}

	/*--------------------------------------------------------------
	 ## Header navigation menus. Base styles for menus, menu items, and their links
	--------------------------------------------------------------*/
	.navigation,
	.menu-container {
		display: flex;
	}

	.menu {
		display: flex;
		flex-wrap: wrap;
		justify-content: center;
		align-items: center;
		list-style: none;
		margin: 0;
		padding: 0;

		//show a sub menu when this menu is toggled or gains focus
		.menu-item--toggled-on > .sub-menu,
		li:not(.menu-item--has-toggle):focus > .sub-menu {
			@include show-sub-menu();
		}
	}

	.sub-menu {
		display: block;
		list-style: none;
		margin: 0;
		padding: 0;
		transition: all 0.2s ease;

		//sub menus are hidden by default
		@include hide-sub-menu();

		//small fix for media in sub menus
		.link-media-container {
			justify-content: flex-start;
		}
	}

	// Mega Menu adjustments
	.menu-item.kadence-menu-mega-enabled {
		> ul {
			a {
				width: 100%;
			}

			//nav items sitting alone in a mega menu container
			> .menu-item {
				border-bottom: 0;
				> .kb-link-wrap > a {
					border-bottom: 1px solid rgba(255, 255, 255, 0.1);
				}
				&:not(.menu-item-has-children):last-child > .kb-link-wrap > a {
					border-bottom: 0;
				}
			}
		}
	}

	.kb-link-wrap {
		transition: all 0.2s ease-in-out;
		position: relative;
		display: flex;
	}

	.kb-nav-link-content {
		display: block;
		color: var(--kb-nav-link-color, inherit);
		text-decoration: none;
		transition: all 0.2s ease-in-out;
		transform: translate(0, 0);
		padding: var(--kb-nav-top-padding, 0.6em) var(--kb-nav-right-padding, 0.5em) var(--kb-nav-bottom-padding, 0.6em)
			var(--kb-nav-left-padding, 0.5em);

		&:not([href]) {
			cursor: default;
		}

		&:hover,
		&:focus {
			color: var(--kb-nav-link-hover-color, inherit);
		}
	}

	// Dropdown Toggle Styles
	.kb-nav-dropdown-toggle-btn {
		position: relative;
		overflow: hidden;
		padding: 0;
		margin: 0;
		margin-inline-end: calc(var(--kb-nav-drop-icon-width, 1.6em) * -1);
		inset-inline-end: calc(calc(var(--kb-nav-drop-icon-width, 1.6em) + var(--kb-nav-right-padding, 0.5em)));
		border: 0;
		width: var(--kb-nav-drop-icon-width, 1.6em);
		height: auto;
		border-radius: 0;
		box-shadow: none;
		background: transparent;
		color: inherit;
		left: auto;
		font-size: inherit;
		display: inline-flex;
		justify-content: center;
		pointer-events: none;
		svg {
			pointer-events: none;
		}
	}

	//link padding on the right added to make space for the dropdown toggle
	.menu-item-has-children > .kb-link-wrap > a {
		padding-right: calc(var(--kb-nav-right-padding, 0.5em) + var(--kb-nav-drop-icon-width, 1.6em));
	}

	//top level nav links only
	.navigation > .menu-container > .menu > .menu-item > .kb-link-wrap > .kb-nav-link-content {
		display: flex;
		align-items: center;
	}

	/*
	 * rtl fixes
	 * TODO test these styles
	 */
	.rtl {
		.sub-menu .kb-nav-dropdown-toggle-btn {
			left: 0;
			right: auto;
		}
		ul ul {
			.kb-nav-dropdown-toggle-btn .kb-nav-arrow-svg {
				transform: rotate(-270deg);
			}
			.sub-menu {
				right: 100%;
				left: auto;
			}
		}
		.menu-container > .menu-item .kb-nav-dropdown-toggle-btn {
			right: auto;
			left: calc(1.4em / 2);
		}
	}

	/*--------------------------------------------------------------
	 ## Misc features
	 --------------------------------------------------------------*/
	.kb-nav-label-description {
		display: block;
		font-size: 0.8em;
		text-transform: none;
		letter-spacing: normal;
	}
	.kb-nav-label-content {
		display: block;
	}
}

/*--------------------------------------------------------------
 ## Navigation Link item styles. (pulled in from their separated file for performance)
--------------------------------------------------------------*/
.wp-block-kadence-navigation-link {
	.link-highlight-label {
		transition: color 0.35s ease-in-out, background-color 0.35s ease-in-out;
		color: var(--global-palette9, #ffffff);
		background: var(--global-palette1, #2f2ffc);
		font-size: 0.7em;
		margin-left: 0.2em;
		line-height: normal;
		padding: 0.3em;
		border-radius: 2px;
		gap: 0.5em;
		display: flex;
		flex-wrap: nowrap;
		align-items: center;

		.kt-svg-icon {
			padding-left: 5px;
			svg {
				width: 1em;
				height: 1em;
			}
		}
	}
	.kb-link-wrap .kb-nav-link-content.has-highlight-label {
		display: flex;
		gap: 5px;
	}

	.sub-menu {
		.kb-nav-link-content {
			flex-wrap: wrap;
		}
	}
	.kb-nav-arrow-svg,
	.kadence-svg-icon {
		top: 0.125em;
		position: relative;
		width: 1em;
		height: 1em;
		align-self: center;
	}
	.kb-nav-dropdown-toggle {
		display: block;
		background: transparent;
		position: absolute;
		right: 0;
		top: 50%;
		font-size: inherit;
		width: 0.9em;
		height: 0.9em;
		font-size: 0.9em;
		display: inline-flex;
		line-height: inherit;
		margin: 0;
		padding: 0;
		border: none;
		border-radius: 0;
		transform: translateY(-50%);
		overflow: visible;
		transition: opacity 0.2s ease;
	}
	.kadence-menu-has-description.kadence-menu-has-icon {
		.kb-nav-item-title-wrap {
			display: grid;
			grid-template-columns: 1fr auto;
		}
	}
	&.menu-item-has-children {
		position: relative;
	}

	.link-media-container {
		display: flex;
		align-self: flex-start;
		max-width: 150px;
		padding: 0.3em;
	}

	.link-svg-icon {
		display: inline-flex;
		justify-content: center;
		align-items: center;
		svg {
			width: 1em;
			height: 1em;
		}
	}
}
